{
	"info": {
		"_postman_id": "e5136aad-f6ab-42d5-83d2-869034f8fa65",
		"name": "OMG",
		"description": "# üöÄ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## üîñ **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these request types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a variable called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## üí™ Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more scripts in \"Tests\" to verify if the API works as expected and execute flows.\n    \n\n## ‚ÑπÔ∏è Resources\n\n[Building requests](https://learning.postman.com/docs/sending-requests/requests/)  \n[Authorizing requests](https://learning.postman.com/docs/sending-requests/authorization/)  \n[Using variables](https://learning.postman.com/docs/sending-requests/variables/)  \n[Managing environments](https://learning.postman.com/docs/sending-requests/managing-environments/)  \n[Writing scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23410230"
	},
	"item": [
		{
			"name": "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è",
			"item": [
				{
					"name": "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var client_access_token = pm.response.json().token;\r",
									"console.log(client_access_token);\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(200);\r",
									"    pm.globals.set(\"client_access_token\", client_access_token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "m.aqyn",
									"type": "text"
								},
								{
									"key": "email",
									"value": "baqytzhan.teacher",
									"type": "text",
									"disabled": true
								},
								{
									"key": "password",
									"value": "123123",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}{{prefix}}/login",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "–°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var client_access_token = pm.response.json().token;\r",
									"console.log(client_access_token);\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(200);\r",
									"    pm.globals.set(\"client_access_token\", client_access_token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "m.aqyn",
									"type": "text"
								},
								{
									"key": "email",
									"value": "baqytzhan.teacher",
									"type": "text",
									"disabled": true
								},
								{
									"key": "password",
									"value": "123123",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}{{prefix}}/password",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "–í—ã–π—Ç–∏",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"access_token\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{client_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}{{prefix}}/logout",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "–Ø",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{client_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}{{prefix}}/me",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"me"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "–†–∞–±–æ—Ç–Ω–∏–∫–∏",
			"item": [
				{
					"name": "–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{client_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}{{prefix}}/workers",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"workers"
							]
						}
					},
					"response": []
				},
				{
					"name": "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{client_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "surname",
									"value": "rfgbdb",
									"type": "text"
								},
								{
									"key": "name",
									"value": "dfhgfgb",
									"type": "text"
								},
								{
									"key": "lastname",
									"value": "sdfgdh",
									"type": "text"
								},
								{
									"key": "org_id",
									"value": "3",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "8418515421",
									"type": "text"
								},
								{
									"key": "job",
									"value": "asdgerg",
									"type": "text"
								},
								{
									"key": "crust_id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}{{prefix}}/workers",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"workers"
							]
						}
					},
					"response": []
				},
				{
					"name": "–£–¥–∞–ª–∏—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{client_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}{{prefix}}/workers/6",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"workers",
								"6"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "–ì—Ä—É–ø–ø—ã",
			"item": [
				{
					"name": "–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≥—Ä—É–ø–ø",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{client_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}{{prefix}}/groups",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{client_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "start",
									"value": "2023-10-20",
									"type": "text"
								},
								{
									"key": "end",
									"value": "2023-10-20",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "asdgerg",
									"type": "text"
								},
								{
									"key": "chin",
									"value": "–†–∞–±–æ—á–∏–π",
									"type": "text"
								},
								{
									"key": "commission",
									"value": "–ú—É—Ö–∞–º–º–µ–¥ –ë, –ê“õ—ã–Ω –ú",
									"type": "text"
								},
								{
									"key": "pass",
									"value": "1",
									"type": "text"
								},
								{
									"key": "workers[0]",
									"value": "2",
									"type": "text"
								},
								{
									"key": "workers[1]",
									"value": "3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}{{prefix}}/groups",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "–£–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{client_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}{{prefix}}/groups/3",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"groups",
								"3"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã",
			"item": [
				{
					"name": "–∏–Ω–¥.—Ä–µ–∑.",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{client_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}{{prefix}}/results/worker/8",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"results",
								"worker",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "–°–∫–∞—á–∞—Ç—å pdf —Å –∏–Ω–¥.—Ä–µ–∑.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{client_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}{{prefix}}/results/download/worker/8",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"results",
								"download",
								"worker",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "—Ä–µ–∑. –≥—Ä—É–ø–ø—ã",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{client_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}{{prefix}}/results/group/1",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"results",
								"group",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "–°–∫–∞—á–∞—Ç—å pdf —Å —Ä–µ–∑. –≥—Ä—É–ø–ø—ã",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{client_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}{{prefix}}/results/download/group/1",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"results",
								"download",
								"group",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "—Ä–µ–∑. –ø–æ –æ—Ä–≥",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{client_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}{{prefix}}/results/org/1",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"results",
								"org",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "–°–∫–∞—á–∞—Ç—å pdf —Å —Ä–µ–∑. –ø–æ –æ—Ä–≥",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{client_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}{{prefix}}/results/download/orgs/1",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"results",
								"download",
								"orgs",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏",
			"item": [
				{
					"name": "–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ä–≥",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{client_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}{{prefix}}/orgs",
							"host": [
								"{{url}}{{prefix}}"
							],
							"path": [
								"orgs"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "–°–∫–∞—á–∞—Ç—å pdf —Å –∫–æ–¥–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{client_access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}{{prefix}}/access-codes/1",
					"host": [
						"{{url}}{{prefix}}"
					],
					"path": [
						"access-codes",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –¥–æ—Å—Ç—É–ø–∞",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var client_access_token = pm.response.json().token;\r",
							"console.log(client_access_token);\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"    pm.globals.set(\"client_access_token\", client_access_token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "access_code",
							"value": "787704",
							"type": "text"
						},
						{
							"key": "access_code",
							"value": "443716",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}{{prefix}}/check-code",
					"host": [
						"{{url}}{{prefix}}"
					],
					"path": [
						"check-code"
					]
				}
			},
			"response": []
		},
		{
			"name": "–°—Ç–∞—Ä—Ç —ç–∫–∑–∞–º–µ–Ω",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "accessCode",
							"value": "744021",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}{{prefix}}/start",
					"host": [
						"{{url}}{{prefix}}"
					],
					"path": [
						"start"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://192.168.31.122:8000",
			"type": "string"
		},
		{
			"key": "prefix",
			"value": "/api/v1",
			"type": "string"
		}
	]
}